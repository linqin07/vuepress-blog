(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{504:function(t,s,a){"use strict";a.r(s);var n=a(20),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"awk"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#awk"}},[t._v("#")]),t._v(" awk")]),t._v(" "),s("h5",{attrs:{id:"如获取80端口使用情况"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如获取80端口使用情况"}},[t._v("#")]),t._v(" 如获取80端口使用情况")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lsof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i:80")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{print $2}'")]),t._v("\n")])])]),s("h5",{attrs:{id:"需要去过滤掉第一行-nr-指定行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#需要去过滤掉第一行-nr-指定行"}},[t._v("#")]),t._v(" 需要去过滤掉第一行，NR 指定行：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lsof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i:80")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'NR!=1{print $2}'")]),t._v("\n")])])]),s("h5",{attrs:{id:"每行按空格或tab分割-输出文本中的1、4项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#每行按空格或tab分割-输出文本中的1、4项"}},[t._v("#")]),t._v(" 每行按空格或TAB分割，输出文本中的1、4项")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 格式化输出")]),t._v("\n $ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{printf \"%-8s %-10s\\n\",$1,$4}'")]),t._v(" log.txt\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列转行，拼接 1,2,3,4,5,")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{printf \"%s,\",$1}'")]),t._v(" a1.txt\n")])])]),s("h5",{attrs:{id:"忽略大小写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#忽略大小写"}},[t._v("#")]),t._v(" 忽略大小写")]),t._v(" "),s("p",[t._v("~ 表示模式开始。// 中是模式。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'BEGIN{IGNORECASE=1} /this/'")]),t._v(" log.txt\n---------------------------------------------\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" this is a "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\nThis's a "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n")])])]),s("h6",{attrs:{id:"分隔符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分隔符"}},[t._v("#")]),t._v(" 分隔符")]),t._v(" "),s("p",[t._v("-F 按分隔符分割")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" /etc/passwd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-F")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("':'")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{print $1}'")]),t._v("  \n")])])]),s("h6",{attrs:{id:"累计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#累计"}},[t._v("#")]),t._v(" 累计")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{sum+=$1}END{print sum}'")]),t._v("\n")])])]),s("h5",{attrs:{id:"过滤完排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#过滤完排序"}},[t._v("#")]),t._v(" 过滤完排序")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" log.log "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{print $12}'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("uniq")]),t._v("\n")])])]),s("h5",{attrs:{id:"匹配-与-不匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#匹配-与-不匹配"}},[t._v("#")]),t._v(" "),s("strong",[t._v("匹配 与 不匹配")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("~ 匹配正则\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("~ 不匹配正则\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" 等于\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" 不等于\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos7_test130"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat test.txt ")]),t._v("\nqqqqq "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nwwwww "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\neeeee "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\nddddd f\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos7_test130"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat test.txt |awk '{if($2==1)print}'")]),t._v("\nqqqqq "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos7_test130"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat test.txt |awk '{if($2!=1)print}'")]),t._v("\nwwwww "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\neeeee "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\nddddd f\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos7_test130"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat test.txt |awk '{if($2~/^f/)print}' ")]),t._v("\nddddd f\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos7_test130"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat test.txt |awk '{if($2!~/./)print}'")]),t._v("\n\n\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);