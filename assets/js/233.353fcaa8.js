(window.webpackJsonp=window.webpackJsonp||[]).push([[233],{456:function(t,p,v){"use strict";v.r(p);var _=v(2),a=Object(_.a)({},(function(){var t=this,p=t.$createElement,v=t._self._c||p;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"cbb共享平台"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cbb共享平台","aria-hidden":"true"}},[t._v("#")]),t._v(" CBB共享平台")]),t._v(" "),v("p",[t._v("CBB共享模块的建立，不仅缩短了研发时间，节约了研发成本和制造成本，还保证了产品的质量，可以说是一个一劳永逸的战略部署")]),t._v(" "),v("p",[t._v("针对产品质量，CBB共享模块可以保证研发的质量，提高研发的效率。")]),t._v(" "),v("p",[t._v("针对供应商，统一的规范使得供应商数目下降，采购价格因为量大价格优惠，降低成本。")]),t._v(" "),v("blockquote",[v("p",[t._v("有一次，任总开会，问一名副总裁：“你的产品有百分之多少是自己开发的呀？”这位副总裁非常骄傲的说：“我们的产品，有80%都是自己开发的，20%是公司现有模块”。任总非常生气，骂他：“你这个老农民”。又问另一个副总裁:“你的产品有百分之多少是自己开发的呀？”这位副总裁说：“我们的产品60%是自己开发的，40%是公司现有的模块。”任总点点头：“你是农民企业家。”（开始学会整合资源了。）又问另一个副总裁:“你的产品有百分之多少是自己开发的呀？”这位副总裁说:”我们的产品40%是自己开发的，60%是公司现有模块。”任总非常高兴：“你才是真正的企业家。”")]),t._v(" "),v("p",[t._v("华为早期的螺钉就有2000多种。为什么呢？研发人员讲究”创新”。他设计一个直角螺钉，我就设计一个卯角的，另外一个哥们看我设计卯角的，他就设计一个弯角的，反正和你们的都不一样，体现自己的独特性。这种创新有没有必要呢？答案显然不是。因此，华为后期通过对CBB共享模块进行梳理，发现只需要200多种螺钉。由于设计人员无谓的“创新”，导致公司物料编码很多，很多物料采购量有很少，一是增加了采购部门的工作量，另一方面，由于我们采购的很少，因此，采购的议价就没有优势，导致很多物料的采购价格偏高。")]),t._v(" "),v("p",[t._v("IBM数据表明，如果公司建立规范化的CBB共享平台，在产品设计过程中尽量选用平台库中的部件和物料，料号减少了30%，供应商从5000多家减少到1200多家，共享的开发费用从2%增加到20%，减少50亿美元的库存成本，每年节约持有成本5亿美元，节约劳动力20亿美元。")])]),t._v(" "),v("p",[t._v("PTM 产品技术经理")]),t._v(" "),v("h3",{attrs:{id:"微内核"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微内核","aria-hidden":"true"}},[t._v("#")]),t._v(" 微内核")]),t._v(" "),v("p",[t._v("类似于插件的方式动态添加新能力")]),t._v(" "),v("p",[t._v("sbp：\nhttps://github.com/brujoand/sbp\nhttps://github.com/j-barata/marketbasket-sbp-sample    基于sbp实现的一个demo（线上界面：https://marketbasket-sbp-sample.herokuapp.com/）")]),t._v(" "),v("p",[t._v("pf4j：\nhttps://pf4j.org/\nhttps://github.com/pf4j/pf4j")]),t._v(" "),v("p",[v("strong",[t._v("优势：")])]),t._v(" "),v("p",[t._v("1、新增能力不需要重新部署，即插即用。")]),t._v(" "),v("p",[t._v("2、能力能够被主系统管控，能力的启停")]),t._v(" "),v("p",[t._v("3、能够支持更多方式的扩展化")]),t._v(" "),v("p",[v("strong",[t._v("劣势")]),t._v("：")]),t._v(" "),v("p",[t._v("1、能力的增加会导致所在服务器的资源的消耗，随着插件数量上升，影响会愈加扩大，目前7个插件会导致nebula启动时多增加1分钟左右的时间，而内存和CPU等的消耗同样也会存在问题。当插件因设计或编码问题导致性能异常时，很容易就直接影响到主体进而导致全面的雪崩。")]),t._v(" "),v("p",[t._v("2、插件的更新略过了公司的研测流程会导致风险，如果需要降低风险，需要研发一些工具类来保障插件能力的可用性和稳定性，会需要投入较大开发成本和维护成本。")]),t._v(" "),v("p",[t._v("3、架构的底层实现与实际业务的需求有冲突。架构支持的能力均是以内存管理和文件管理为主，若需要将插件进行数据库持久化管理则需要进行相应的扩展，同时因为pf4j架构的插件均在内存中维护（是架构的根本，不能变更），数据库中的插件信息和内存中的插件信息的数据同步需要耗费精力去梳理和优化（如：插件信息是在数据库中维护的，插件在pf4j架构中启动之后，pf4j只会维护内存中插件的状态，若需要同步到数据库则需要一定的研发，包括插件增删改查和启动停止等均需要做内存态和数据库状态同步；当服务启动时，pf4j会加载文件系统中的jar包并启动所有插件，这时候他仅维护内存中的插件的信息，若需要同步到数据库还需要更多的扩展工作；这类的例子肯定还会持续遇到）。")])])}),[],!1,null,null,null);p.default=a.exports}}]);