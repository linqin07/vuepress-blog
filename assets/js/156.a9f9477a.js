(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{552:function(t,a,n){"use strict";n.r(a);var e=n(20),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("时序图")]),t._v(" "),a("div",{staticClass:"language-mermaid extra-class"},[a("pre",{pre:!0,attrs:{class:"language-mermaid"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sequenceDiagram")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("participant")]),t._v(" 老板A\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("participant")]),t._v(" 员工A\n\n    老板A "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("->>")]),t._v(" 员工A "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" “在这里我们都是兄弟！”\n    老板A "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("-x")]),t._v(" 员工A "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 画个饼\n    员工A "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e>")]),t._v(" 老板A "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 鼓掌\n")])])]),a("h5",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法：")]),t._v(" "),a("p",[t._v("消息语句格式为："),a("code",[t._v("<参与者> <箭头> <参与者> : <描述文本>")]),t._v("。")]),t._v(" "),a("p",[t._v("其中 "),a("code",[t._v("<箭头>")]),t._v("的写法有：")]),t._v(" "),a("p",[a("code",[t._v("->>")]),t._v(" 显示为实线箭头（主动发出消息）")]),t._v(" "),a("p",[a("code",[t._v("--\x3e>")]),t._v("显示为虚线箭头（响应）")]),t._v(" "),a("p",[a("code",[t._v("-x")]),t._v("显示为末尾带「X」的实线箭头（异步消息）")]),t._v(" "),a("h3",{attrs:{id:"_2-2-4-puml-案例学习"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-4-puml-案例学习"}},[t._v("#")]),t._v(" 2.2.4 puml 案例学习")]),t._v(" "),a("div",{staticClass:"language-puml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("participant springboot\nparticipant netty\ncontrol akka\ndatabase mongdb\n\nautonumber\n\nspringboot->netty: 注册netty\ngroup netty初始化\nnetty -> netty\nactivate netty\nnetty --\x3e netty: 启动 ServerBootstrap\nnetty --\x3e netty: GatewayInitializer 类注册处理器 ChannelHandler\nnetty --\x3e netty: netty消息处理url请求，处理自定义路径HttpRouter\nnetty --\x3e netty: 匹配路由地址处理不同请求\nnetty -> akka: 构造参数，分发到akka, actorRef.tell\ndeactivate netty\n\nend\n\ngroup loop\nactivate akka\nakka -> akka: createReceive() 匹配接收信息类型\nakka -> mongdb: AgentRequest 处理,初始化查询数据\nmongdb -> akka: 转换消息为子类型 FlowActor.UserRequestMsg\ngroup 按顺序处理每一个数据流节点信息 \nakka -> akka: 处理每一个子流程节点的业务\nakka -> akka: 节点结束发送FlowEndMsg 消息给父akka\nakka -> akka: 节点结束发送ChatEndMsg，会话结束\nend \n\ndeactivate akka\nend\n\nskinparam responseMessageBelowArrow true\nakka -> netty: parent 处理FlowEndMsg消息，response给前端\nnote left\n类ChatResponseHandler实现参数返回\n由netty的ChannelHandlerContext \n返回消息给客户端\nend note\n\nakka -> akka: 优雅关闭全部回话\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);