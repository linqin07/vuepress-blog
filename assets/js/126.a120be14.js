(window.webpackJsonp=window.webpackJsonp||[]).push([[126],{353:function(n,e,v){"use strict";v.r(e);var p=v(2),_=Object(p.a)({},(function(){var n=this,e=n.$createElement,v=n._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[v("p",[v("strong",[n._v("本地安装")]),n._v(": 安装包会被下载到当前所在目录,因此只能在当前目录下使用")]),n._v(" "),v("p",[v("strong",[n._v("全局安装")]),n._v(": 安装包会被下载到到特定的系统目录下,安装包能够在所有目录下使用。")]),n._v(" "),v("p",[n._v("全局安装 -g\n安装的设置的 node_global 目录，命令可以全局使用。没什么空间限制最好都 -g 安装就好了。")]),n._v(" "),v("p",[n._v("查看安装模式：npm get global")]),n._v(" "),v("p",[n._v("设置默认全局安装：npm set global=true")]),n._v(" "),v("p",[n._v("npm 删除模块\n【npm uninstall xxx】删除xxx模块；\n【npm uninstall -g xxx】删除全局模块xxx；")]),n._v(" "),v("p",[n._v("查看已经安装过的包\nnpm list -g --depth 0")]),n._v(" "),v("p",[n._v("-g 表示全局安装的 后面的展开目录的深度")]),n._v(" "),v("p",[n._v("更新\nnpm outdated\nnpm update moduleName")]),n._v(" "),v("p",[n._v("npm uninstall 模块")]),n._v(" "),v("p",[n._v("删除本地模块时你应该思考的问题：是否将在package.json上的相应依赖信息也消除？")]),n._v(" "),v("p",[n._v("npm uninstall 模块：删除模块，但不删除模块留在 package.json 中的对应信息")]),n._v(" "),v("p",[n._v("npm uninstall 模块 --save 删除模块，同时删除模块留在package.json中dependencies下的对应信息")]),n._v(" "),v("p",[n._v("npm uninstall 模块 --save-dev 删除模块，同时删除模块留在package.json中devDependencies下的对应信息")]),n._v(" "),v("p",[n._v("清楚缓存，有时候其他原因导致失败，需要清除缓存重试")]),n._v(" "),v("p",[n._v("npm cache clear --force")]),n._v(" "),v("p",[n._v("linux 实际原因是由于用的是"),v("code",[n._v("root")]),n._v("账户权限执行"),v("code",[n._v("npm")]),n._v("，而"),v("code",[n._v("npm")]),n._v("默认是不适用root权限创建内容，因此会出现权限问题而导致失败，加上参数"),v("code",[n._v("--unsafe-perm=true --allow-root")]),n._v("即可解决问题。")]),n._v(" "),v("p",[n._v("--unsafe-perm=true --allow-root")])])}),[],!1,null,null,null);e.default=_.exports}}]);