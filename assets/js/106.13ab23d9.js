(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{333:function(t,a,e){"use strict";e.r(a);var s=e(2),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"find"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#find","aria-hidden":"true"}},[t._v("#")]),t._v(" find")]),t._v(" "),e("h6",{attrs:{id:"type"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type","aria-hidden":"true"}},[t._v("#")]),t._v(" -type")]),t._v(" "),e("p",[t._v("查找文件类型"),e("code",[t._v("f")]),t._v("，目录类型"),e("code",[t._v("d")]),t._v("，文本类型，链接类型"),e("code",[t._v("l")])]),t._v(" "),e("blockquote",[e("p",[t._v("find ./ -type f")])]),t._v(" "),e("h6",{attrs:{id:"name"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#name","aria-hidden":"true"}},[t._v("#")]),t._v(" -name")]),t._v(" "),e("p",[t._v("按名字查询，查询名字为test的目录或者文件")]),t._v(" "),e("blockquote",[e("p",[t._v("find ./ -name test")]),t._v(" "),e("p",[t._v("find ./ -name ‘*.log’")])]),t._v(" "),e("h6",{attrs:{id:"ctime-n-atime-n-cmin-n-amin-n"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ctime-n-atime-n-cmin-n-amin-n","aria-hidden":"true"}},[t._v("#")]),t._v(" -ctime +n | -atime -n | -cmin +n | -amin -n")]),t._v(" "),e("p",[t._v("c 表示修改过，a 表示读取过，+n 表示在多少天/分钟"),e("code",[t._v("前")]),t._v("，-n 表示在多少天/分钟"),e("code",[t._v("内")])]),t._v(" "),e("h6",{attrs:{id:"size"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#size","aria-hidden":"true"}},[t._v("#")]),t._v(" -size")]),t._v(" "),e("p",[t._v("查询大小小于10M的文件，正负表示大于小于，G，M兆，k（kb），c（字节）")]),t._v(" "),e("blockquote",[e("p",[t._v("find ./ -type f -size -10M")])]),t._v(" "),e("h6",{attrs:{id:"maxdepth"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#maxdepth","aria-hidden":"true"}},[t._v("#")]),t._v(" -maxdepth")]),t._v(" "),e("p",[t._v("查询层级，多个组合放在前面")]),t._v(" "),e("blockquote",[e("p",[t._v("find / -maxdepth 1")])]),t._v(" "),e("h6",{attrs:{id:"exec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exec","aria-hidden":"true"}},[t._v("#")]),t._v(" -exec")]),t._v(" "),e("p",[t._v("{} \\结尾，中间有空格，"),e("code",[t._v("花括号代表前面``find``查找出来的文件名")]),t._v("，中间补全其他条件。表示执行其他的操作，和管道差不多。")]),t._v(" "),e("blockquote",[e("p",[t._v('find . -type f -exec grep -l "dev" {} ;')]),t._v(" "),e("p",[t._v("删除两天前的后缀为log的文件")]),t._v(" "),e("p",[t._v('find /data -ctime +2 -name "*.log" -exec rm -rf {} ;')])]),t._v(" "),e("h6",{attrs:{id:"xargs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xargs","aria-hidden":"true"}},[t._v("#")]),t._v(" -xargs")]),t._v(" "),e("p",[t._v("xargs可以将输入内容（通常通过命令行管道传递），转成后续命令的参数。")]),t._v(" "),e("p",[t._v("用于结果输出后续对结果的命令操作。有些命令不支持管道。")]),t._v(" "),e("blockquote",[e("p",[t._v('find /home -name * | xargs grep "max_children"')]),t._v(" "),e("p",[t._v("cat pidkill.txt | xargs kill -9")]),t._v(" "),e("h5",{attrs:{id:"使用-d-分割输入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-d-分割输入","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用 -d 分割输入")]),t._v(" "),e("p",[e("strong",[t._v("-d 选项")]),t._v(" 可以自定义一个定界符：")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nameXnameXnameXname"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("xargs")]),t._v(" -dX\nname name name name\n")])])]),e("h5",{attrs:{id:"使用-n-进行多行输出"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-n-进行多行输出","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用 -n 进行多行输出")]),t._v(" "),e("p",[e("strong",[t._v("-n 选项")]),t._v(" 多行输出：")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" test.txt "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("xargs")]),t._v(" -n3\n\na b c\n")])])])]),t._v(" "),e("h3",{attrs:{id:"grep"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#grep","aria-hidden":"true"}},[t._v("#")]),t._v(" grep")]),t._v(" "),e("ul",[e("li",[t._v("-r  表示迭代文件夹")]),t._v(" "),e("li",[t._v("-i  忽略大小写")]),t._v(" "),e("li",[t._v("-v 反转查找")]),t._v(" "),e("li",[t._v("-w 默认模糊匹配，-w 参数为全匹配（精确匹配）")]),t._v(" "),e("li",[t._v("-f  指定 file 与之匹配（标准的文件一定"),e("code",[t._v("不能有空行")]),t._v("才行，否则空行后面全部能匹配）")]),t._v(" "),e("li",[t._v("-E <regex> 和正则匹配，和 egrep（只能文本匹配，不能正则） 差不多")]),t._v(" "),e("li",[t._v("-A 20 获取匹配后面20行")]),t._v(" "),e("li",[t._v("-B 20 获取匹配前面20行")]),t._v(" "),e("li",[t._v("-C 20 获取匹配前后面20行")]),t._v(" "),e("li",[e("code",[t._v("--color")]),t._v(" 关键字加粗")]),t._v(" "),e("li",[t._v("-l  显示文件名")]),t._v(" "),e("li",[t._v("-n 在显示符合范本样式的那一列之前，标示出该列的编号")]),t._v(" "),e("li",[t._v("-c count 计数，等同 wc -l")])]),t._v(" "),e("h6",{attrs:{id:"例子："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#例子：","aria-hidden":"true"}},[t._v("#")]),t._v(" 例子：")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定文件后缀grep")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'shopbase'")]),t._v(" /home/admin -r -n --include *."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("vm,java"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 反匹配")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'shopbase'")]),t._v(" /home/admin -r -n --exclude *."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("vm,java"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#多文件")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" word f.txt cpf.txt\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#遍历文件夹搜索关键词。")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" -rl webSocket ./\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 打印出文件2中与文件1中的相同行")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" -fw txt1 txt2\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 排除txt2中所有的txt1行")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" -vfw txt1 txt2\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#正则以f结尾")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" test.txt "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" -E "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'f$'")]),t._v("\nddddd f\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);