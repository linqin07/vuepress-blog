(window.webpackJsonp=window.webpackJsonp||[]).push([[282],{676:function(t,s,a){"use strict";a.r(s);var n=a(20),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"introduction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),s("p",[t._v("责任链模式")]),t._v(" "),s("p",[t._v("使用须知：大部分的业务场景，只要是链路的感觉，都可以用上这个模式。")]),t._v(" "),s("p",[t._v("使用时注意：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("通过责任链进行一个个"),s("code",[t._v("setNext")]),t._v("，最后启动必须是第一个启动。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Approver")]),t._v(" approver "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Staff")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张三"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n approver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setNextApprover")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Manager")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"李四"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n \t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setNextApprover")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CEO")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"王五"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n approver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("approve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("关于抽象类私有变量共享的问题。从上面可以看到，"),s("code",[t._v("set")]),t._v("都是通过 "),s("code",[t._v("new")]),t._v("进行注入，这样每次抽象类都会重写生成一个私有变量，导致私有变量不能共享。")]),t._v(" "),s("p",[t._v("解决方案：")]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("ul",[s("li",[t._v("将私有变量变为"),s("code",[t._v("static")]),t._v("，让变量属于类，这样可以达到变量共享。但是要注意，如果有多次调用，这个静态变量又会照成多线程并发的问题。如果不是多线程、多请求，只是单请求，这是个不错的解决方案。")]),t._v(" "),s("li",[t._v("将私有变量设置为处理类的参数进行传递，如上代码的"),s("code",[t._v("张三")]),t._v("、"),s("code",[t._v("李四")]),t._v("等，在抽象类中定义私有变量，设置构造方法。在新建的时候进行初始化即可。缺点就是这样就无法再进行注册到"),s("code",[t._v("Spring")]),t._v("中了。")])])]),t._v(" "),s("li",[s("p",[t._v("责任链模式要注意每一层的异常处理。异常是由本层处理还是向上抛出，可以根据业务进行对应处理。")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);