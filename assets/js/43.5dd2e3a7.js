(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{435:function(s,a,t){"use strict";t.r(a);var e=t(20),r=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"jstack-指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jstack-指令"}},[s._v("#")]),s._v(" "),a("strong",[s._v("jstack 指令")])]),s._v(" "),a("h6",{attrs:{id:"_1-线上linux性能排查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-线上linux性能排查"}},[s._v("#")]),s._v(" 1.线上linux性能排查")]),s._v(" "),a("p",[s._v("查内存")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("free")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v("\n")])])]),a("p",[s._v("查负载 "),a("code",[s._v("M")]),s._v("按内存排序，"),a("code",[s._v("top")]),s._v(" 然后"),a("code",[s._v("P")]),s._v("按使用率排序。或者")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("top -c\n")])])]),a("p",[s._v("查磁盘")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("df")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-h")]),s._v("\n")])])]),a("h6",{attrs:{id:"_2-得到负载最高的进程pid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-得到负载最高的进程pid"}},[s._v("#")]),s._v(" 2.得到负载最高的进程"),a("code",[s._v("PID")])]),s._v(" "),a("p",[s._v("使用命令查看子线程负载情况，查看进程数 "),a("code",[s._v("ps -eLf | grep PID | wc -l")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("top")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-Hp")]),s._v(" PID\n")])])]),a("p",[s._v("获取线程最高负载的线程"),a("code",[s._v("pid")]),s._v("，转化为16进制 xxxx，对应堆栈打印的应该就是"),a("code",[s._v("tid=0x00xx")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("printf")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%x'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('"')]),s._v(" pid\n00xx\n")])])]),a("h6",{attrs:{id:"_3-使用jstack查看堆栈信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-使用jstack查看堆栈信息"}},[s._v("#")]),s._v(" 3.使用"),a("code",[s._v("jstack")]),s._v("查看堆栈信息")]),s._v(" "),a("p",[s._v("打印对应堆栈信息关键字后20行，"),a("code",[s._v("-l")]),s._v("表示打印额外的锁信息。"),a("code",[s._v("BLOCKED")]),s._v(" 死锁关键字。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("jstack "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v(" pid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'00xx'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-A")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" dump\n")])])]),a("h6",{attrs:{id:"_4-查看子线程数目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-查看子线程数目"}},[s._v("#")]),s._v(" 4.查看子线程数目")]),s._v(" "),a("p",[s._v("-"),a("code",[s._v("L")]),s._v("显示具体的子线程信息，配合"),a("code",[s._v("wc -l")]),s._v("命令查看子线程数目可以很直观的看到效果。一般暴增子线程数都是线上的批量操作操作资源没有关闭导致的。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -eLf"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" pid\n也可以 其中Threads后面跟的就是线程数\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /proc/PID/status\n\n")])])]),a("h6",{attrs:{id:"_5-查看内存信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-查看内存信息"}},[s._v("#")]),s._v(" 5.查看内存信息")]),s._v(" "),a("p",[s._v("ps p PID -L -o pcpu,pmem,pid,tid,time,tname,cmd")]),s._v(" "),a("h3",{attrs:{id:"jmap-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jmap-命令"}},[s._v("#")]),s._v(" jmap 命令")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@-81"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# jmap")]),s._v("\nUsage:\n    jmap "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("option"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("pid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("to connect to running process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    jmap "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("option"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("executable "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("core"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("to connect to a core "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    jmap "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("option"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("server_id@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("remote server IP or hostname"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("to connect to remote debug server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nwhere "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("option"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" is one of:\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("               to print same info as Solaris pmap\n    "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-heap")]),s._v("                to print "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("java")]),s._v(" heap summary\n    -histo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":live"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("        to print histogram of "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("java")]),s._v(" object heap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" the "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"live"')]),s._v("\n                         suboption is specified, only count live objects\n    "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-clstats")]),s._v("             to print class loader statistics\n    "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-finalizerinfo")]),s._v("       to print information on objects awaiting finalization\n    -dump:"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("dump-options"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" to dump "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("java")]),s._v(" heap "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" hprof binary "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v("\n                         dump-options:\n                           live         dump only live objects"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" not specified,\n                                        all objects "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the heap are dumped.\n                           "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("format")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("b     binary "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v("\n                           "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("file")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  dump heap to "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n                         Example: jmap -dump:live,format"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("b,file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("heap.bin "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("pid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-F")]),s._v("                   force. Use with -dump:"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("dump-options"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("pid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" or "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-histo")]),s._v("\n                         to force a heap dump or histogram when "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("pid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" does not\n                         respond. The "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"live"')]),s._v(" suboption is not supported\n                         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" this mode.\n    "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-h")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-help")]),s._v("           to print this "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v(" message\n    -J"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("flag"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("             to pass "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("flag"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" directly to the runtime system\n")])])]),a("p",[s._v("导出 dump 文件：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("jmap -dump:live,file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("dump.bin,format"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("b  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9667")]),s._v("\n")])])]),a("p",[s._v("查看堆 heap 的情况")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("jmap "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-heap")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9667")]),s._v("\n")])])]),a("p",[s._v("打印 jvm heap 的直方图。其输出信息包括类名，对象数量，对象占用大小。")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@-81 data2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# jmap -histo:live 9667 |head -n 10")]),s._v("\n\n num     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#instances         #bytes  class name")]),s._v("\n----------------------------------------------\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(":          "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8924")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("175292816")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("B\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(":        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("144536")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20573344")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("C\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(":        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("420675")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13461600")]),s._v("  com.elasticsearch.analyzer.cnsegmet.PreFixTree"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$TreeNode")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(":        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("420676")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9094392")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Lcom.elasticsearch.analyzer.cnsegmet.PreFixTree"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$TreeNode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(":         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("35315")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5387808")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Ljava.lang.Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(":         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("49435")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4350280")]),s._v("  java.lang.reflect.Method\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(":        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("110358")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3531456")]),s._v("  java.util.concurrent.ConcurrentHashMap"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$Node")]),s._v("\n")])])]),a("h3",{attrs:{id:"jstat-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jstat-命令"}},[s._v("#")]),s._v(" jstat 命令")]),s._v(" "),a("p",[s._v("jstat -gcutil PID 1000 表示每隔1s执行一次")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ivory@gaivory root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ jstat "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-gcutil")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3178")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),s._v("\n  S0        S1     E           O      M      CCS    YGC     YGCT  FGC FGCT     GCT   \n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.05")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.00")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11.93")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("31.60")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("96.07")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("93.17")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("146")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.659")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.079")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.737")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.05")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.00")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11.94")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("31.60")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("96.07")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("93.17")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("146")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.659")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.079")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.737")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.05")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.00")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12.02")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("31.60")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("96.07")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("93.17")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("146")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.659")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.079")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.737")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.05")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.00")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12.03")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("31.60")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("96.07")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("93.17")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("146")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.659")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.079")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.737")]),s._v("\n\n")])])]),a("ul",[a("li",[s._v("S0   Heap上的 Survivor space 0 区已使用空间的百分比")]),s._v(" "),a("li",[s._v("S1   Heap上的 Survivor space 1 区已使用空间的百分比")]),s._v(" "),a("li",[s._v("E     Heap上的 Eden space 区已使用空间的百分比")]),s._v(" "),a("li",[s._v("O    Heap上的 Old space 区已使用空间的百分比")]),s._v(" "),a("li",[s._v("M    元数据区使用比例")]),s._v(" "),a("li",[s._v("YGC  从应用程序启动到采样时发生 Young GC 的次数")]),s._v(" "),a("li",[s._v("YGCT Young GC 总时间")]),s._v(" "),a("li",[s._v("FGC  从应用程序启动到采样时发生 Full GC 的次数")]),s._v(" "),a("li",[s._v("FGCT Full GC 总时间")]),s._v(" "),a("li",[s._v("GCT   GC总时间")])]),s._v(" "),a("p",[s._v("YGC 理解")]),s._v(" "),a("p",[s._v("新生代内存按照 8:1:1 的比例分为一个 eden 区和两个 survivor(survivor0, survivor1) 区。一个Eden区，两个 Survivor区。新 new 出来的对象会存储在 Eden(伊甸园)中，当这区域满了之后JVM会进行一次垃圾回收，在回收时把有用的对象存储在 S1 区，没用的就销毁此对象的内存空间，这过程即第一次 YoungGC，如果 S1 区空间也满了后，同理会将有用的对象会放到 S2 区中，并释放 S1 空间，以上反复的回收即为 YoungGC。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://blog-07.oss-cn-guangzhou.aliyuncs.com/picBak/image-20211110132125529.png",alt:"image-20211110132125529.png"}})]),s._v(" "),a("h4",{attrs:{id:"full-gc-理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#full-gc-理解"}},[s._v("#")]),s._v(" FULL GC 理解")]),s._v(" "),a("p",[s._v("年轻代空间满了之后，会将满足一定活跃度的对象放到 Old 区中(对象活跃度：每个对象满足JVM默认 count=15 之后就判断是活跃对象，每次 YoungGC 后会将存活对象生命中 +1，直到 =15 就转到 Old 区，这个次数可以通过：-XX:MaxTenuringThreshold 来配置)， 由于 Full GC 需要对整个堆进行回收，导致应用访问变慢，因此应该尽可能减少Full GC 的次数。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://blog-07.oss-cn-guangzhou.aliyuncs.com/picBak/image-20211110132217685.png",alt:"image-20211110132217685.png"}})])])}),[],!1,null,null,null);a.default=r.exports}}]);