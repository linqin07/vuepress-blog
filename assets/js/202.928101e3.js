(window.webpackJsonp=window.webpackJsonp||[]).push([[202],{427:function(t,a,s){"use strict";s.r(a);var e=s(2),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"安装spring-boot-cli"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装spring-boot-cli","aria-hidden":"true"}},[t._v("#")]),t._v(" 安装Spring Boot CLI")]),t._v(" "),s("p",[t._v("Spring Boot CLI 为"),s("a",{attrs:{href:"https://github.com/spring-cloud",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Cloud"),s("OutboundLink")],1),t._v("提供了"),s("a",{attrs:{href:"https://projects.spring.io/spring-boot",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Boot"),s("OutboundLink")],1),t._v("命令行功能。您可以编写Groovy脚本来运行Spring Cloud组件应用程序（例如）。您还可以轻松地执行诸如加密和解密之类的操作，以通过秘密配置值支持Spring Cloud Config客户端。使用启动器CLI，您可以方便地从命令行一次启动Eureka，Zipkin，Config Server等服务（在开发时非常有用）。")]),t._v(" "),s("p",[t._v("点击查看"),s("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-cli/reference/html/#_running_spring_cloud_services_in_development",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方网站"),s("OutboundLink")],1),t._v("，"),s("a",{attrs:{href:"https://github.com/spring-cloud/spring-cloud-cli/blob/master/spring-cloud-launcher/README.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub"),s("OutboundLink")],1),t._v(" 目前 2.1.0 比较文稳定")]),t._v(" "),s("p",[t._v("下载地址 "),s("a",{attrs:{href:"https://repo.spring.io/release/org/springframework/boot/spring-boot-cli/2.1.0.RELEASE/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://repo.spring.io/release/org/springframework/boot/spring-boot-cli/2.1.0.RELEASE/"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("设置好解压后的 bin 目录为环境变量。")]),t._v(" "),s("h3",{attrs:{id:"查看安装状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看安装状态","aria-hidden":"true"}},[t._v("#")]),t._v(" 查看安装状态")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ spring --version\nSpring CLI v2.1.0.RELEASE\n")])])]),s("h6",{attrs:{id:"install-the-spring-cloud-plugin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install-the-spring-cloud-plugin","aria-hidden":"true"}},[t._v("#")]),t._v(" install the Spring Cloud plugin")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("spring "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" org.springframework.cloud:spring-cloud-cli:2.1.0.RELEASE\n")])])]),s("h6",{attrs:{id:"list-services"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#list-services","aria-hidden":"true"}},[t._v("#")]),t._v(" list services")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("spring cloud --list\n")])])]),s("p",[t._v("$ spring cloud eureka configserver h2 kafka stubrunner zipkin")]),t._v(" "),s("p",[t._v("启动对应的服务名称即可。")]),t._v(" "),s("h3",{attrs:{id:"使用本地配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用本地配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用本地配置")]),t._v(" "),s("p",[t._v("可以使用具有相同名称的本地YAML文件（在当前工作目录或名为“ config”的子目录中或中"),s("code",[t._v("~/.spring-cloud")]),t._v("）配置每个应用程序。例如:")]),t._v(" "),s("p",[s("code",[t._v("eureka.yml")]),t._v(" win下目录：C:\\Users\\LinQin\\.spring-cloud\\eureka.yml")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8762")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("application")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" eureka\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("eureka")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("client")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 由于该应用为注册中心, 所以设置为false, 代表不向注册中心注册自己")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("registerWithEureka")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 由于注册中心的职责就是维护服务实例, 它并不需要去检索服务, 所以也设置为 false")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fetchRegistry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("waitTimeInMsWhenSyncEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),s("h3",{attrs:{id:"添加其他应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加其他应用","aria-hidden":"true"}},[t._v("#")]),t._v(" 添加其他应用")]),t._v(" "),s("p",[t._v("可以添加其他应用程序"),s("code",[t._v("./config/cloud.yml")]),t._v("（不是 "),s("code",[t._v("./config.yml")]),t._v("因为它将替换默认值），例如")]),t._v(" "),s("p",[t._v("配置 cloud.yml")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("launcher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deployables")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("source")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("coordinates")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" maven"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//com.example"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0.0.1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("SNAPSHOT\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7000")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("coordinates")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" maven"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//com.example"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("sink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0.0.1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("SNAPSHOT\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7001")]),t._v("\n")])])]),s("p",[t._v("当您列出应用程序时：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ spring cloud --list\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" sink configserver dataflow eureka h2 hystrixdashboard kafka stubrunner zipkin\n")])])]),s("p",[t._v("The "),s("code",[t._v("name")]),t._v(" attribute is required. If "),s("code",[t._v("waitUntilStarted")]),t._v(" is true, Launcher will block until the application has reached the "),s("code",[t._v("deployed")]),t._v(" state. Before commands are deployed, the list is sorted using Spring's "),s("code",[t._v("OrderComparator")]),t._v(". In the above case, "),s("code",[t._v("configserver")]),t._v(" is deployed before any other app is deployed. Currently only "),s("code",[t._v("maven:")]),t._v(" coordinates and standard Spring Resources ("),s("code",[t._v("file:")]),t._v(", etc...) are supported.")])])}),[],!1,null,null,null);a.default=r.exports}}]);