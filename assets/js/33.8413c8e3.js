(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{258:function(t,a,s){"use strict";s.r(a);var e=s(2),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"git命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git命令","aria-hidden":"true"}},[t._v("#")]),t._v(" git命令")]),t._v(" "),s("p",[t._v("在当前目录新建一个Git代码库\n"),s("code",[t._v("git init")]),t._v("\n新建一个目录，将其初始化为Git代码库\n"),s("code",[t._v("​git init [project-name]")]),t._v("\n下载一个项目和它的整个代码历史")]),t._v(" "),s("h3",{attrs:{id:"git-中文乱码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-中文乱码","aria-hidden":"true"}},[t._v("#")]),t._v(" GIT 中文乱码")]),t._v(" "),s("p",[s("code",[t._v(".gitconfig")]),t._v(" 添加：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("gui"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    encoding "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" utf-8  \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代码库统一使用utf-8  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i18n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    commitencoding "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" utf-8  \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# log编码  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("svn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    pathnameencoding "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" utf-8  \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 支持中文路径  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("core"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\tquotepath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" \n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# status引用路径不再是八进制（反过来说就是允许显示中文）")]),t._v("\n")])])]),s("p",[t._v("也可以通过命令设置")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global core.quotepath "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])]),s("h3",{attrs:{id:"git的工作流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git的工作流程","aria-hidden":"true"}},[t._v("#")]),t._v(" Git的工作流程")]),t._v(" "),s("p",[t._v("https://gitee.com/linqin07/pic/raw/master/1552467555151.png")]),t._v(" "),s("p",[t._v("Git add\n添加到缓存里面")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("git add .")])])]),t._v(" "),s("p",[t._v("不加参数默认为将修改操作的文件和未跟踪新添加的文件添加到git系统的暂存区，注意不包括删除")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("git add -u .")])])]),t._v(" "),s("p",[t._v("-u  == --update ，表示将已跟踪文件中的修改和删除的文件添加到暂存区，不包括新增加的文件，注意这些被删除的文件被加入到暂存区再被提交并推送到服务器的版本库之后这个文件就会从git系统中消失了。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("git add -A .")])])]),t._v(" "),s("p",[t._v("-A == --all  ， 表示将所有的已跟踪的文件的修改与删除和新增的未跟踪的文件都添加到暂存区。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("git add -i .")])])]),t._v(" "),s("p",[t._v("日常工作中了解前三个命令已足够能满足我们的使用需求了，但是了解一下这个交互式拣选操作也是不错的。这个命令它也是作用于版本库中已被跟踪的文件中的执行过修改与删除操作的文件。")]),t._v(" "),s("h3",{attrs:{id:"查看git远程仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看git远程仓库","aria-hidden":"true"}},[t._v("#")]),t._v(" 查看git远程仓库")]),t._v(" "),s("p",[t._v("到根目录下，关联/修改远程仓库")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote -v\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" origin\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin https://github.com/wuyihao1992/SingTel.git\n// push不上去报错Push to origin/master was rejected，由于服务器上面有不相干的历史，执行下面命令\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin master --allow-unrelated-histories\n")])])]),s("h3",{attrs:{id:"测试git连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试git连接","aria-hidden":"true"}},[t._v("#")]),t._v(" 测试git连接")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" -T git@github.com\n")])])]),s("h3",{attrs:{id:"清空远程仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#清空远程仓库","aria-hidden":"true"}},[t._v("#")]),t._v(" 清空远程仓库")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -r --cached "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n// 删除add的某个文件夹\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -r --cached target\n")])])]),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])]),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".gitignore is now working"')]),t._v("\n")])])]),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin master\n")])])]),s("h3",{attrs:{id:"还原"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#还原","aria-hidden":"true"}},[t._v("#")]),t._v(" 还原")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("// 未add到版本里面的\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -f xxxfileName\n")])])]),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("//git撤销本地所有未提交的更改\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard\n")])])]),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("//git撤销本地所有已经提交的更改，仅仅是撤回commit操作，您写的代码仍然保留\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --soft\n")])])]),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("// HEAD^的意思是上一个版本，也可以写成HEAD~1,2次commit，想都撤回，可以使用HEAD~2\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --soft HEAD~1\n")])])]),s("h3",{attrs:{id:"git暂时忽略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git暂时忽略","aria-hidden":"true"}},[t._v("#")]),t._v(" git暂时忽略")]),t._v(" "),s("p",[t._v("忽略不提交git中已修改入库的文件。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" update-index --assume-unchanged config/secretKeyConf.js\n")])])]),s("p",[t._v("取消忽略")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" update-index --no-assume-unchanged config/secretKeyConf.js\n")])])]),s("p",[t._v("查看：当文件比较多时，还可以借助 grep 命令来筛选，例如：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git ls-files -v| grep '^h'\n")])])]),s("p",[t._v("git 既然支持 alias，可以通过配置 alias 来简化操作，编辑 .git/config 文件，把下述配置加入到 alias 段即可")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("alias"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\tignore "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" update-index --assume-unchanged\n\tunignore "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" update-index --no-assume-unchange\n\tignored "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("git ls-files -v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^h"')]),t._v("\n")])])]),s("p",[s("strong",[t._v("语法")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ignore"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("unignore"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ignored"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" filename\n")])])]),s("h3",{attrs:{id:"设置代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置代理","aria-hidden":"true"}},[t._v("#")]),t._v(" 设置代理")]),t._v(" "),s("p",[t._v("如果是针对当前项目代理 "),s("code",[t._v("--local")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("// 设置代理\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global http.proxy http://127.0.0.1:7890\n// 取消代理\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global --unset http.proxy\n")])])]),s("h3",{attrs:{id:"命令行更新合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令行更新合并","aria-hidden":"true"}},[t._v("#")]),t._v(" 命令行更新合并")]),t._v(" "),s("p",[t._v("需要本地没有修改，如有修改请先 stash")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("//查看当前远程的版本\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote -v\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -a\n\n//获取最新代码到本地临时分支"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("本地当前分支为"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("master"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("，获取的远端的分支为"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("origin/mater"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",拉取到新分支test中"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch origin master:test\n\n//查看当前和另外一个版本差\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n\n//合并最新分支到本地分支\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n\n// 删除本地临时分支\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -D "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n")])])]),s("h3",{attrs:{id:"gitignore"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gitignore","aria-hidden":"true"}},[t._v("#")]),t._v(" .gitignore")]),t._v(" "),s("p",[t._v("git 目录创建文件")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("touch .gitignore\n")])])]),s("p",[t._v("常用配置")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(".idea\n**/target/*\nxxxfile\nxxxfloder\n*.log\n")])])]),s("p",[t._v(".gitignore规则不生效，或者删除服务器上已经存在的忽略文件")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git rm -r --cached .\ngit add .\ngit commit -m '忽略文件'\ngit push\n")])])]),s("h3",{attrs:{id:"二-账号密码免登"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二-账号密码免登","aria-hidden":"true"}},[t._v("#")]),t._v(" 二.账号密码免登")]),t._v(" "),s("blockquote",[s("p",[t._v("此方法只适用于通过 https 校验登录,适用于每次命令提交都提示输入账户密码，密码还是要token的，恶心的一逼")])]),t._v(" "),s("p",[t._v("设置 -> git 编辑本地 .git/config 增加(tortoiseGit可这样修改config，自行找自己喜欢的修改对应项目本地config方式就好)")]),t._v(" "),s("div",{staticClass:"language-ini extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[credential]")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("    helper")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" store")]),t._v("\n")])])]),s("p",[t._v("保存，输入一次账号密码后第二次就会记住账号密码了")]),t._v(" "),s("p",[t._v("命令方式也可以设置")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("添加到git 全局配置\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global credential.helper store\n\n查看git配置\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --list\n输出内容包含credential.helper"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("store,就OK了\n可以查看目录文件 ~/.git-credentials\n")])])]),s("h3",{attrs:{id:"git合并已提交commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git合并已提交commit","aria-hidden":"true"}},[t._v("#")]),t._v(" git合并已提交commit")]),t._v(" "),s("p",[t._v("场景：开发过程中已经拉一个分支出来各种改改改，多次commit记录，并且已经push。\n方式一： 直接软还原所有该分支的提交，再提交push，强制覆盖。再合并到主分支。")])])}),[],!1,null,null,null);a.default=n.exports}}]);