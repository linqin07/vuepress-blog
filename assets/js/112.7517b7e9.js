(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{339:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"zookeeper-概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper-概述","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("strong",[t._v("ZooKeeper 概述")])]),t._v(" "),a("p",[t._v("ZooKeeper 是一种为分布式应用所设计的高可用、高性能且一致的开源协调服务，它提供了一项基本服务："),a("strong",[t._v("分布式锁服务")]),t._v("。由于 ZooKeeper 的开源特性，后来我们的开发者在分布式锁的基础上，摸索了出了其他的使用方法："),a("strong",[t._v("配置维护、组服务、分布式消息队列")]),t._v("、"),a("strong",[t._v("分布式通知/协调")]),t._v("等。")]),t._v(" "),a("h3",{attrs:{id:"zookeeper-数据模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper-数据模型","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("strong",[t._v("ZooKeeper 数据模型")])]),t._v(" "),a("p",[t._v("ZooKeeper的数据模型，在结构上和标准文件系统的非常相似，都是采用这种树形层次结构，ZooKeeper树中的每个节点被称为—Znode。和文件系统的目录树一样，ZooKeeper树中的每个节点可以拥有子节点。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-07.oss-cn-guangzhou.aliyuncs.com/picBak/1559107255964.png",alt:"1559107255964.png"}})]),t._v(" "),a("h6",{attrs:{id:"znode结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#znode结构","aria-hidden":"true"}},[t._v("#")]),t._v(" Znode结构")]),t._v(" "),a("p",[t._v("ZooKeeper 命名空间中的 Znode，兼具文件和目录两种特点。既像文件一样维护着数据、元信息、ACL(访问控制列表)、时间戳等数据结构，又像目录一样可以作为路径标识的一部分。图中的每个节点称为一个 Znode。 每个 Znode 由3部分组成:")]),t._v(" "),a("ul",[a("li",[t._v("stat：此为状态信息, 描述该Znode的版本, 权限等信息")]),t._v(" "),a("li",[t._v("data：与该 Znode 关联的数据，保存数据不大于 1M。")]),t._v(" "),a("li",[t._v("children：该 Znode 下的子节点")])]),t._v(" "),a("p",[t._v("每个 zk 节点都是有各自的版本号，每当节点中的数据发生变化，版本号就会累加（乐观锁）。删除/修改过时节点，版本号不匹配则会报错。")]),t._v(" "),a("h6",{attrs:{id:"节点类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#节点类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 节点类型")]),t._v(" "),a("ol",[a("li",[t._v("临时节点：该节点的生命周期依赖于创建它们的会话。一旦会话(Session)结束，临时节点将被自动删除，当然可以也可以手动删除。虽然每个临时的 Znode 都会绑定到一个客户端会话，但他们对所有的客户端还是可见的。另外，ZooKeeper 的"),a("code",[t._v("临时节点不允许拥有子节")]),t._v("点。")]),t._v(" "),a("li",[t._v("永久节点：该节点的生命周期不依赖于会话，并且只有在客户端显示执行删除操作的时候，他们才能被删除。")])]),t._v(" "),a("h6",{attrs:{id:"观察"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#观察","aria-hidden":"true"}},[t._v("#")]),t._v(" 观察")]),t._v(" "),a("p",[t._v("客户端可以在节点上设置 watch，我们称之为"),a("strong",[t._v("监视器")]),t._v("。当节点状态发生改变时( Znode 的增、删、改)将会触发  watch 所对应的操作。当 watch 被触发时，ZooKeeper 将会向客户端发送且仅发送一条通知，因为 watch "),a("code",[t._v("只能被触发一次")]),t._v("，这样可以减少网络流量。")]),t._v(" "),a("h3",{attrs:{id:"zookeeper服务中操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper服务中操作","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("strong",[t._v("ZooKeeper服务中操作")])]),t._v(" "),a("p",[t._v("在ZooKeeper中有9个基本操作，如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-07.oss-cn-guangzhou.aliyuncs.com/picBak/301534572468352.png",alt:"301534572468352.png"}})]),t._v(" "),a("p",[t._v("更新 ZooKeeper 操作是有限制的。delete 或 setData 必须明确要更新的 Znode 的版本号，我们可以调用 exists 找到。如果版本号不匹配，更新将会失败。")]),t._v(" "),a("p",[t._v("更新 ZooKeeper 操作是非阻塞式的。因此客户端如果失去了一个更新(由于另一个进程在同时更新这个 Znode，他可以在不阻塞其他进程执行的情况下，选择重新尝试或进行其他操作。")]),t._v(" "),a("h3",{attrs:{id:"zookeeper-watch机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper-watch机制","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("strong",[t._v("Zookeeper Watch机制")])]),t._v(" "),a("p",[t._v("ZooKeeper可以为所有的"),a("strong",[t._v("读操作")]),t._v("设置watch，这些读操作包括：exists()、getChildren() 及 getData()。watch 事件是"),a("strong",[t._v("一次性的触发器")]),t._v("，当watch的对象状态发生改变时，将会触发此对象上watch所对应的事件。watch 事件将被"),a("strong",[t._v("异步")]),t._v("地发送给客户端，并且 ZooKeeper 为 watch 机制提供了有序的"),a("strong",[t._v("一致性保证")]),t._v("。理论上，客户端接收 watch 事件的时间要快于其看到 watch 对象状态变化的时间。")]),t._v(" "),a("p",[t._v("下面是对如何设置监控点的总结")]),t._v(" "),a("ul",[a("li",[t._v("对于 NodeCreated 通过 exists API 设置")]),t._v(" "),a("li",[t._v("对于 NodeDeleted 通过 exists 和 getData() 设置")]),t._v(" "),a("li",[t._v("对于 NodeDataChanged 通过 exists 或 getData 设置")]),t._v(" "),a("li",[t._v("对于 NodeChildrenChanged 通过 getChildren 设置")])]),t._v(" "),a("p",[t._v("实现 "),a("code",[t._v("Watcher")]),t._v(" 接口")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("process")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WatchedEvent")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"接受到watch通知：{}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventType")]),t._v(" type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeCreated")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"新建节点:"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeDeleted")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"删除节点:"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeDataChanged")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"修改节点:"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeChildrenChanged")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"子节点:"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("None")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"none"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);