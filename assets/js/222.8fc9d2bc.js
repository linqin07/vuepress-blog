(window.webpackJsonp=window.webpackJsonp||[]).push([[222],{445:function(e,t,a){"use strict";a.r(t);var s=a(2),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h3",{attrs:{id:"导致索引失效的情况："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导致索引失效的情况：","aria-hidden":"true"}},[e._v("#")]),e._v(" 导致索引失效的情况：")]),e._v(" "),a("h6",{attrs:{id:"_1-应尽量避免在-where-子句中对字段进行-null-值判断，否则将导致引擎放弃使用索引而进行全表扫描；"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-应尽量避免在-where-子句中对字段进行-null-值判断，否则将导致引擎放弃使用索引而进行全表扫描；","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃使用索引而进行全表扫描；")]),e._v(" "),a("blockquote",[a("p",[e._v("如：select id from t where num "),a("code",[e._v("is null")]),e._v(" ；")])]),e._v(" "),a("h6",{attrs:{id:"_2-索引在有大量重复数据时无效。例如一个表中的字段只有两个值‘男’‘女’，即使索引生效对查询效率起不了作用。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-索引在有大量重复数据时无效。例如一个表中的字段只有两个值‘男’‘女’，即使索引生效对查询效率起不了作用。","aria-hidden":"true"}},[e._v("#")]),e._v(" 2.索引在有大量重复数据时无效。例如一个表中的字段只有两个值‘男’‘女’，即使索引生效对查询效率起不了作用。")]),e._v(" "),a("p",[e._v("简而言之，数据尽可能不同索引的效果才明显。")]),e._v(" "),a("h6",{attrs:{id:"_3-应尽量避免在-where-子句中使用-或-操作符，否则将引擎放弃使用索引而进行全表扫描。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-应尽量避免在-where-子句中使用-或-操作符，否则将引擎放弃使用索引而进行全表扫描。","aria-hidden":"true"}},[e._v("#")]),e._v(" 3.应尽量避免在 where 子句中使用"),a("code",[e._v("!=")]),e._v("或"),a("code",[e._v("<>")]),e._v("操作符，否则将引擎放弃使用索引而进行全表扫描。")]),e._v(" "),a("p",[e._v("不等全表扫描。")]),e._v(" "),a("h6",{attrs:{id:"_4-应尽量避免在-where-子句中使用-or-来连接条件，否则将导致引擎放弃使用索引而进行全表扫描"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-应尽量避免在-where-子句中使用-or-来连接条件，否则将导致引擎放弃使用索引而进行全表扫描","aria-hidden":"true"}},[e._v("#")]),e._v(" 4.应尽量避免在 where 子句中使用 "),a("code",[e._v("or")]),e._v(" 来连接条件，否则将导致引擎放弃使用索引而进行全表扫描.")]),e._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("select")]),e._v(" id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("where")]),e._v(" num"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("or")]),e._v(" num"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),e._v(" \n")])])]),a("p",[e._v("可以这样查询：")]),e._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("select")]),e._v(" id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("where")]),e._v(" num"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("union")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("all")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("select")]),e._v(" id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("where")]),e._v(" num"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),e._v("\n")])])]),a("h6",{attrs:{id:"_5-in-和-not-in-也要慎用，可能会导致全表扫描。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-in-和-not-in-也要慎用，可能会导致全表扫描。","aria-hidden":"true"}},[e._v("#")]),e._v(" 5. in 和 not in 也要慎用，"),a("code",[e._v("可能会")]),e._v("导致全表扫描。")]),e._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("select")]),e._v(" id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("where")]),e._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("in")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" \n")])])]),a("p",[e._v("对于连续的数值，能用 between 就不要用 in 了：")]),e._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("select")]),e._v(" id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("where")]),e._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("between")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("and")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("h6",{attrs:{id:"_6-如果在-where-子句中使用参数，也会导致全表扫描。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-如果在-where-子句中使用参数，也会导致全表扫描。","aria-hidden":"true"}},[e._v("#")]),e._v(" 6.如果在 where 子句中使用参数，也会导致全表扫描。")]),e._v(" "),a("blockquote",[a("p",[e._v("select id from t where num=@num\n可以改为强制查询使用索引：\nselect id from t with(index(索引名)) where num=@num")])]),e._v(" "),a("h6",{attrs:{id:"_7-应尽量避免在-where-子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-应尽量避免在-where-子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描。","aria-hidden":"true"}},[e._v("#")]),e._v(" 7.应尽量避免在 where 子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描。")]),e._v(" "),a("blockquote",[a("p",[e._v("select id from t where num/2=100\n应改为:\nselect id from t where num=100*2")])]),e._v(" "),a("h6",{attrs:{id:"_8-应尽量避免在where子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-应尽量避免在where子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描","aria-hidden":"true"}},[e._v("#")]),e._v(" 8.应尽量避免在where子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描.")]),e._v(" "),a("blockquote",[a("p",[e._v("select id from t where substring(name,1,3)=’abc’")])]),e._v(" "),a("h6",{attrs:{id:"_9-很多时候用-exists-代替-in-是一个好的选择："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-很多时候用-exists-代替-in-是一个好的选择：","aria-hidden":"true"}},[e._v("#")]),e._v(" 9.很多时候用 exists 代替 in 是一个好的选择：")]),e._v(" "),a("p",[e._v("exists 一种通俗的可以理解为：将外查询表的每一行，代入内查询作为检验，如果内查询返回的结果取非空值，则EXISTS子句返回TRUE，这一行行可作为外查询的结果行，否则不能作为结果。")]),e._v(" "),a("blockquote",[a("p",[e._v("in 和 exists的区别: 如果"),a("code",[e._v("子查询得出的结果集记录较少，主查询中的表较大且又有索引时应该用in")]),e._v(", 反之如果"),a("code",[e._v("外层的主查询记录较少，子查询中的表大，又有索引时使用exists")]),e._v("。\nselect num from a where num in(select num from b)\n应改为:\nselect num from a where exists(select 1 from b where num=a.num)")])]),e._v(" "),a("h3",{attrs:{id:"优化建议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优化建议","aria-hidden":"true"}},[e._v("#")]),e._v(" 优化建议")]),e._v(" "),a("ul",[a("li",[e._v("A. 对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。")]),e._v(" "),a("li",[e._v("B. 索引并不是越多越好，索引固然可以提高相应的 select 的效率，但同时也降低了 insert 及 update 的效率，因为 insert 或 update 时有可能会重建索引，所以怎样建索引需要慎重考虑，视具体情况而定。一个表的索引数最好不要超过6个，若太多则应考虑一些不常使用到的列上建的索引是否有必要。")]),e._v(" "),a("li",[e._v("D. 尽量使用"),a("code",[e._v("数字型")]),e._v("字段，若只含数值信息的字段尽量不要设计为字符型，这会降低查询和连接的性能，并会增加存储开销。这是因为引擎在处理查询和连接时会逐个比较字符串中每一个字符，而对于数字型而言只需要比较一次就够了。")]),e._v(" "),a("li",[e._v("E. 尽可能的使用 varchar/nvarchar 代替 char/nchar ，因为首先变长字段存储空间小，可以节省存储空间，其次对于查询来说，在一个相对较小的字段内搜索效率显然要高些。")]),e._v(" "),a("li",[e._v("F. 尽量使用表变量来代替临时表。如果表变量包含大量数据，请注意索引非常有限（只有主键索引）。")]),e._v(" "),a("li",[e._v("G. 在新建临时表时，如果一次性插入数据量很大，那么可以使用 select into 代替 create table，避免造成大量 log ，以提高速度；如果数据量不大，为了缓和系统表的资源，应先create table，然后insert。")]),e._v(" "),a("li",[e._v("H. 如果使用到了临时表，在存储过程的最后务必将所有的临时表显式删除，先 "),a("code",[e._v("truncate table")]),e._v(" ，然后 drop table ，这样可以避免系统表的较长时间锁定。")]),e._v(" "),a("li",[e._v("I. 任何地方都不要使用 select * from t ，用具体的字段列表代替“*”，不要返回用不到的任何字段。")]),e._v(" "),a("li",[e._v("J. 尽量避免使用游标，因为游标的效率较差，如果游标操作的数据超过1万行，那么就应该考虑改写。")]),e._v(" "),a("li",[e._v("K. 尽量避免大事务操作，提高系统并发能力。")]),e._v(" "),a("li",[e._v("L.当只要一行数据时使用"),a("code",[e._v("LIMIT 1")]),e._v(";")]),e._v(" "),a("li",[e._v("M.千万不要ORDER BY RAND();")]),e._v(" "),a("li",[e._v("N.使用 ENUM 而不是 VARCHAR。\n如果你有一个字段，比如“性别”，“国家”，“民族”，“状态”或“部门”，你知道这些字段的取值是有限而且固定的，那么，你应该使用 ENUM 而不是      VARCHAR。")]),e._v(" "),a("li",[e._v("O.把IP地址存成 UNSIGNED INT。很多程序员都会创建一个 VARCHAR(15) 字段来存放字符串形式的IP而不是整形的IP。如果你用整形来存放，只需要4个字节，并且你可以有定长的字段。而且，这会为你带来查询上的优势，尤其是当你需要使用这样的WHERE条件：IP between ip1 and ip2。")]),e._v(" "),a("li",[e._v("P.使用like是，"),a("code",[e._v("'like'和’like%‘")]),e._v("还是能用到索引的，使用了'%like'或者’%like%‘索引失效。\njava方面优化：")])])])}),[],!1,null,null,null);t.default=r.exports}}]);